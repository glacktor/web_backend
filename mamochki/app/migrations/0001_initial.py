# Generated by Django 5.1.2 on 2024-12-11 11:22

import app.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('salary', models.IntegerField()),
                ('city', models.CharField(max_length=255)),
                ('employer', models.CharField(max_length=255)),
                ('photo', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('a', 'Active'), ('d', 'Deleted')], default='a', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email адрес')),
                ('password', models.CharField(verbose_name='Пароль')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Является ли пользователь менеджером?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Является ли пользователь админом?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', app.models.NewUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Rezume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, null=True)),
                ('status', models.CharField(choices=[('dr', 'Draft'), ('del', 'Deleted'), ('f', 'Formed'), ('c', 'Completed'), ('r', 'Rejected')], default='dr', max_length=9)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('formed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_rezumes', to=settings.AUTH_USER_MODEL)),
                ('moderator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_rezumes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RezumeJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.IntegerField(default=0, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.job')),
                ('rezume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.rezume')),
            ],
        ),
        migrations.AddConstraint(
            model_name='rezume',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'dr')), fields=('creator',), name='unique_draft_per_user'),
        ),
        migrations.AddConstraint(
            model_name='rezumejob',
            constraint=models.UniqueConstraint(fields=('rezume', 'job'), name='unique_rezume_job'),
        ),
    ]
